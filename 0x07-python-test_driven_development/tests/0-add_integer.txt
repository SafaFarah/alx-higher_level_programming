#Import function from module
----------------------------
>>> add_integer = __import__('0-add_integer').add_integer

Test Cases:
1- requler addition:
>>> add_integer(8, 5)
13
>>> add_integer(8,-5)
3
>>> add_integer(8.5,5)
13
>>> add_integer(8.5,5.5)
13
>>> add_integer(0)
98

2-check type:
>>> add_integer(8,"5")
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer("8","5")
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer("8", 5)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(None)
Traceback (most recent call last):
TypeError: a must be an integer

>>0-add_integer.txt> add_integer(23, None)
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer(None, 23)
Traceback (most recent call last):
TypeError: a must be an integer

3-number of arguments:

>>> add_integer()
Traceback (most recent call last):
TypeError: add_integer() missing 1 required positional argument: 'a'

>>> add_integer(58, 4, 9)
Traceback (most recent call last):
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

4-Float overflow:
>>> add_integer(4, float('inf'))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer

5- cannot casting float to integer:
>>> add_integer(float('NaN'), 4)
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer
